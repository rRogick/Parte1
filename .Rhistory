setwd("D:/RFundamentos/R_Fundamentos")
version
contributors()
contributors()
license()
license()
sessionInfo()
sessionInfo()
# Imprimir na tela
print('R - Uma das principais ferramentas do Cientista de Dados')
# Imprimir na tela
print('R - Uma das principais ferramentas do Cientista de Dados')
print('R - Uma das principais ferramentas do Cientista de Dados')
print('R - Uma das principais ferramentas do Cientista de Dados')
# Imprimir na tela
print('R - Uma das principais ferramentas do Cientista de Dados')
# Criar grÃ¡ficos
plot(1:30)
hist(rnorm(10))
# Instalar pacotes
install.packages('randomForest')
hist(rnorm(10))
hist(rnorm(10))
hist(rnorm(10))
hist(rnorm(10))
install.packages('randomForest')
install.packages("ggplot2")
library(ggplot2)
detach(package:ggplot2)
help(mean)
?mean
help.search('randomForest')
help.search('matplot')
??matplot
RSiteSearch('matplot')
example('matplot')
4 + 4
4 - 4
4 * 4
# Divisao
4 / 4
# Potencia
4^2
4**2
# Modulo
14 %% 3
# Atibuindo variaveis
a = 7
b = 5
# Operadores
A > 8
# Operadores
a > 8
a < 8
a <= 8
a >= 8
a == 8
a != 8
(a==8) & (b==6)
(a==7) & (b==5)
(a==8) | (b>5)
(a==8) & (b==5)
(a==8) | (b>=5)
# Not
a > 8
print (!a > 8)
# Numeric - Todos os numeros criados em R sao do tipo numerico
num = 2.5
num
num2 = 4
num2
x = -123
x
class(x)
# Conversao de tipos Numeric
is.integer(num2)
y = as.integer(num2)
class(y)
x2 = 3.14
x2
y2 = as.intefer(3.14)
y2 = as.integer(3.14)
y2
as.integer('4.27')
as.integer("Joe")
as.integer('Joe')
as.integer(TRUE)
# Character
char1 = 'A'
char1
char2 = "bolha"
char2
# Complex
compl = 2.5 * 4i
compl
class(compl)
# Complex
compl = 2.5 + 4i
compl
class(compl)
compl
sqrt(-1)
sqrt(-1+0i)
sqrt(as.complex(-1))
# Logic
x = 1; y = 2
z = x > y
z
class(z)
u = TRUE; v = FALSE
class(u)
u & v
u | v
!u
# Operacoes com 0
5/0
0/5
# Erro
'Joe'/5
var1 = 367
va1
var1
mode(var1)
help("mode")
sqrt(var1)
var2 = as.integer(var1)
var2
mode(var2)
typeof(var2)
help("typeof")
var3 = c("seg","ter","qua")
var3
mode(var3)
var4 = function(x) {x+3}
var4
# Podemos tambem mudar o modo do dado
var5 = as.character(var1)
var5
mode(var5)
## Atribuindo valores a objetos
x <- c(4,5,6)
x
c(4,5,6) -> y
y
assign(x,c(1,3,4,-2))
assign("x",c(1,3,4,-2))
## Verificando o valor em uma posicao especifica
x[1]
assign("x",c(1.3,4,-2))
## Verificando o valor em uma posicao especifica
x[1]
## Verificar objetos
ls()
## Verificar objetos
ls()
objects()
## Remover objetos
rm(x)
x
vetor1 <- c(1:10)
vetor1
length(vetor1)
mode(vetor1)
class(vetor1)
typeof(vetor1)
matriz1 <- matrix(1:10, nrow =2)
matriz1
View(matriz1)
length(matriz1)
mode(matriz1)
class(matriz1)
typeof(matriz1)
array1 <- array(1:5, dim=c(3,3,3))
array1
lenght(array1)
mode(array1)
length(array1)
mode(array1)
class(array1)
typeof(array1)
# Data Frames: dados de diferentes tipos
view(iris)
View(iris)
length(iris)
mode(iris)
class(iris)
typeof(iris)
lista1 <- list(a=matriz1, b=vetor1)
lista1 <- list(a=matriz1, b=vetor1)
lista1
length(lista1)
mode(lista1)
class(lista1)
typeof(lista1)
func1 <- function(x) {
var1 <- x * x
return(var1)
}
func1(5)
class(func1)
# Removendo objetos
objetcts()
# Removendo objetos
objects()
rm(array1, func1)
objects()
# Vetor de caracteres
vetor_caracter = c("Ola","DSA")
vetor_caracter
# Vetor de floats
vetor_numerico = c(1.90, 45.3, 300.5)
vetor(numerico)
vetor_numerico
# Vetor de valores complexos
vetor_complexo = c(5.2+3i, 3.8+4i)
vetor_complexo
#Vetor de valores logicos
vetor_logico = c(TRUE, FALSE, TRUE, FALSE, FALSE)
vetor_logico
# Vetor de numeros inteiros
vetor_integer = c(2, 4, 6)
vetor_integer
# Utilizando seq()
vetor1 = seq(1:10)
vetor1
is.vector(vetor1)
# Utilizando rep()
vetor2 = rep(1:5)
vetor2
# Indexacao de vetores
a <- c(1,2,3,4,5)
a
a[1]
a[6]
b <- c("Data","Science")
b
b[1]
# Combinando vetores
v1 = c(2 ,3 ,5)
v2 = c("aa","bb","cc","dd","ee")
c(v1,v2)
# Operacoes com Vetores
x = c(1,3,,5,7)
# Operacoes com Vetores
x = c(1,3,5,7)
y = c(2,4,6,8)
x * 5
x + y
x - y
x * y
x / y
# Somando vetores com numero diferentes de elementos
alfa = c(10,20,30)
beta = c(1,2,3,4,5,6,7,8,9)
alfa+beta
beta = c(1,2,3,4,5,6,7,8,9,10)
alfa+beta
beta = c(1,2,3,4,5,6,7,8)
alfa+beta
beta = c(1,2,3,4,5,6,7,8,9)
alfa+beta
# Vetor Nomeado
v = c("Barack", "Obama")
v
nomes(v) = c("Nome","Sobrenome")
names(v) = c("Nome","Sobrenome")
v["Nome"]
names(v) = c("Nome","Sobrenome")
v
v["Nome"]
